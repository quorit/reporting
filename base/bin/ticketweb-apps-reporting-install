#!/bin/bash


#default values
devel_mode=0
# venv_id=unset
ticketweb_venv_root=unset


usage()
{
  echo "Usage 1: ticketweb-apps-reporting-install --devel-mode <venv_root> <app_git_dir> <rt_interface_git_dir>"
  echo "Usage 2: ticketweb-apps-reporting-install <venv_root>"
  exit 2
}


PARSED_ARGUMENTS=$(getopt --name ticketweb-apps-reporting-install -o d --long devel-mode -- "$@")

VALID_ARGUMENTS=$?
if [ "$VALID_ARGUMENTS" != "0" ]; then
  usage
fi


eval set -- "$PARSED_ARGUMENTS"
while :
do
  case "$1" in
    --devel-mode)   devel_mode=1      ; shift   ;;
    # -- means the end of the arguments; drop this, and break out of the while loop
    --) shift; break ;;
    # If invalid options were passed, then getopt should have reported an error,
    # which we checked as VALID_ARGUMENTS when getopt was called...
    *) echo "Unexpected option: $1 - this should not happen."
       usage ;;
  esac
done


if (( "$devel_mode" == 1 && $# != 3 || "$devel_mode" == 0 && $# != 1 )); then
    usage
fi

ticketweb_venv_root=$1

# venv_id=$(systemd-escape --path "$ticketweb_venv_root")

# if [[ "$devel_mode" -eq 0 ]]; then
#   mkdir --parents --mode=770 /var/log/ticketweb/"$venv_id"/applications/reporting 
#   chown ticketweb_apps_reporting:ticketweb_apps_reporting /var/log/ticketweb/"$venv_id"/applications/reporting
# fi


script_dir=$(dirname -- "$0")


usrshared=/usr/local/share/ticketweb/applications/reporting
venv_usrshared="$ticketweb_venv_root"$usrshared


venv_varlib="$ticketweb_venv_root"/var/lib/ticketweb/applications/reporting


mkdir --parents "$venv_usrshared"


mkdir --parents "$venv_varlib"


rm -rf "$venv_usrshared"/*

rm -rf "$venv_varlib"/*





if [[ "$devel_mode" -eq 0 ]]; then
    frontend_src_dir="$venv_varlib"/frontend
    mkdir "$frontend_src_dir"
    shared_data_target_dir="$venv_usrshared"/shared-data
    mkdir "$shared_data_target_dir"    
else
    app_git_repo_dir="$2"
    ln -s "$app_git_repo_dir"/frontend "$venv_varlib"
    ln -s "$app_git_repo_dir"/shared-data "$venv_usrshared"
    rt_interface_git_repo_dir="$3"
fi   


mkdir --parents "$ticketweb_venv_root"/etc/ticketweb/applications/reporting


source $ticketweb_venv_root/bin/activate

if [[ "$devel_mode" -eq 0 ]]; then
    pip install --force-reinstall "git+https://github.com/quorit/ticketweb-apps-reporting.git#subdirectory=server"
    pip install --force-reinstall "git+https://github.com/quorit/ticketweb-rt-interface.git#subdirectory=server_module"

else
    cd "$app_git_repo_dir"/server
    echo $(pwd)
    pip install --editable .
    cd "$rt_interface_git_repo_dir"/server_module
    echo $(pwd)
    pip install --editable .

fi



mkdir --parents "$ticketweb_venv_root"/srv/ticketweb/applications/reporting/frontend


if [[ "$devel_mode" -eq 0 ]]; then

  tmpdir=$(mktemp -d /tmp/ticketweb-install.XXXXXXXX)
  cd $tmpdir
  git clone https://github.com/quorit/ticketweb-apps-reporting.git
  git clone https://github.com/quorit/ticketweb-authsystem.git
  git clone https://github.com/quorit/ticketweb-rt-interface.git
  cd "$frontend_src_dir"
  cp -r $tmpdir/ticketweb-apps-reporting/frontend/* .
  npm install $tmpdir/ticketweb-apps-reporting/frontend
  npm install $tmpdir/ticketweb-authsystem/frontend_module
  npm install $tmpdir/ticketweb-rt-interface/frontend_module

  cp $tmpdir/ticketweb-apps-reporting/shared-data/* "$shared_data_target_dir"


fi

if [[ "$devel_mode" -eq 1 ]]; then
    pip install --force-reinstall "git+https://github.com/danvk/RangeHTTPServer"
    #not installing from pip because the pip version is not up do date and only runs on port 8000
fi
